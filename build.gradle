buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.1.0.RELEASE'
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'com.github.lkishalmi.gatling' version '3.0.1'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenCentral()
    maven {
        url 'http://packages.confluent.io/maven/'
    }
}

sourceCompatibility = JavaVersion.VERSION_1_10
targetCompatibility = JavaVersion.VERSION_1_10

test {
    exclude '**/*IntegrationTest'
}

task integrationTest(type: Test) {
    include '**/*IntegrationTest'
}
test.finalizedBy integrationTest

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc {
    options.addBooleanOption('html5', true)
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    //noinspection GroovyAccessibility
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-hateoas'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.kafka:spring-kafka'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    
    compile 'io.confluent:kafka-avro-serializer:5.0.1'
    
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile('org.springframework.kafka:spring-kafka-test') {
        exclude module: 'log4j'
    }
    testCompile 'com.github.grantwest.eventually:hamcrest-eventually-matchers:0.0.3'
}



idea {
    targetVersion = '18'
}

task wrapper(type: Wrapper) {
    distributionType = Wrapper.DistributionType.ALL
}
